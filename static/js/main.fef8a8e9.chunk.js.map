{"version":3,"sources":["globalStore/actions_immortals.js","utils/I18n.js","utils/helper.js","globalStore/reducer.js","globalStore/store.js","serviceWorker.ts","actions/action.js","components/LeftSide/Left.jsx","components/LeftSide/index.js","components/Map/Map.jsx","components/RightSide/Right.jsx","components/Map/index.js","components/RightSide/index.js","components/Loading/index.js","components/index.jsx","index.tsx"],"names":["START_LOADING","GET_WEATHER","REDIRECT","STOP_LOADING","i18n","NAME","SURNAME","PATRONYMIC","ACTIVITY","TITLE","JOKE","NAME_TITLE","SURNAME_TITLE","PATRONYMIC_TITLE","ACTIVITY_TITLE","CONTACT","SOCIAL","ALT_PICTURE","GITHUB","INSTAGRAM","VK","MAIL","IMAGE","redirect","location","window","href","initialState","weather","loading","keyAPI","rootReducer","state","action","type","body","store","createStore","Boolean","hostname","match","stopLoading","startLoading","LeftSide","props","locateTo","where","className","src","alt","onClick","map","element","index","activity","key","connect","dispatch","getWeather","Map","size","center","zoom","ReactMapboxGl","accessToken","style","containerStyle","height","width","id","layout","coordinates","defaultProps","lat","lng","Right","useState","click","setClick","Loading","icon","faCode","faNewspaper","faShareAlt","RightSide","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wRAAaA,EAAgB,gBAChBC,EAAc,cACdC,EAAW,WACXC,EAAe,eCHfC,EAAO,CAEhBC,KAAO,YACPC,QAAU,cACVC,WAAa,eACbC,SAAW,sBAEXC,MAAQ,YACRC,KAAO,sBACPC,WAAa,SACbC,cAAgB,YAChBC,iBAAmB,eACnBC,eAAiB,aACjBC,QAAS,UACTC,OAAQ,kBACRC,YAAa,0BACbC,OAAQ,SACRC,UAAW,YACXC,GAAI,KACJC,KAAM,OACNC,MAAQ,gNClBCC,EAAW,SAACC,GACxB,OAAQA,GACP,KAAMpB,EAAKe,UAEX,KAAMf,EAAKc,OAEX,KAAMd,EAAKgB,GAEX,KAAMhB,EAAKiB,KACV,OAAOI,OAAOD,SAASE,KAAO,mC,yjBCRjC,IAAMC,EAAe,CACjBC,QAAS,GACTC,SAAS,EACTC,OAAQ,kGAmBGC,MAhBf,WAAqD,IAA/BC,EAA8B,uDAAtBL,EAAcM,EAAQ,uCAChD,OAAQA,EAAOC,MACX,KAAKjC,EACD,OAAO,EAAP,GAAW+B,GACf,KAAKhC,EACD,OAAO,EAAP,GAAWgC,EAAX,CAAkBH,SAAS,IAC/B,KAAK1B,EACD,OAAO,EAAP,GAAW6B,EAAX,CAAkBH,SAAS,IAC/B,KAAK3B,EAED,OADAqB,EAASU,EAAOE,MACT,EAAP,GAAWH,GACf,QACI,OAAOA,IChBJI,EAFDC,YAAYN,G,eCSNO,QACW,cAA7Bb,OAAOD,SAASe,UAEe,UAA7Bd,OAAOD,SAASe,UAEhBd,OAAOD,SAASe,SAASC,MACvB,2DChBC,SAASC,IACZ,MAAO,CAACP,KAAM/B,GAGX,SAASuC,IACZ,MAAO,CAACR,KAAMlC,G,mBC+BH2C,EA9BE,SAACC,GAEd,IAAMC,EAAW,SAACC,GAAD,OAAWF,EAAMrB,SAASuB,IAE3C,OACI,yBAAKC,UAAW,aACZ,yBAAKA,UAAW,QACZ,yBAAKA,UAAW,kBACZ,yBAAKC,IAAK5C,EAAKkB,MAAO2B,IAAK7C,EAAKa,cAChC,6BACA,kBAAC,IAAD,CAAMiB,KAAK,YAAYgB,QAAS,kBAAML,EAASzC,EAAKe,cACpD,kBAAC,IAAD,CAAMe,KAAK,SAASgB,QAAS,kBAAML,EAASzC,EAAKc,YAErD,yBAAK6B,UAAW,mBACX,CAAC3C,EAAKC,KAAMD,EAAKE,QAASF,EAAKI,UAAU2C,KAAI,SAACC,EAASC,GAAV,OAhBhDC,EAgB6EF,EAhBnEG,EAgB4EF,EAhBpE,uBAAGE,IAAKA,EAAKR,UAAW,kBAAmBO,GAA9D,IAACA,EAAUC,KAiBR,kBAAC,IAAD,CAAMrB,KAAK,OAAOgB,QAASN,EAAMH,cAAgB,sCAAiB,6BAClE,kBAAC,IAAD,CAAMP,KAAK,OAAOgB,QAASN,EAAMF,eAAgB,0CAAqB,iCCR3Ec,eAXS,SAACxB,GAAD,MAAY,CAChCJ,QAASI,EAAMJ,YAGQ,SAAC6B,GAAD,MAAe,CACtCC,WAAY,kBAAMD,EFCX,CAACvB,KAAMjC,KEAdyC,aAAc,kBAAMe,EAASf,MAC7BD,YAAa,kBAAMgB,EAAShB,MAC5BlB,SAAU,SAAAU,GAAM,OAAIwB,EFCjB,SAAmBxB,GACtB,MAAO,CAACC,KAAMhC,EAAUiC,KAAMF,GEFDV,CAASU,QAG3BuB,CAA6Cb,G,0CCZtDgB,EAAM,YAAoC,IAAlCC,EAAiC,EAAjCA,KAAsBhB,GAAW,EAA5BiB,OAA4B,EAApBC,KAAoB,yCACrCH,EAAMI,YAAc,CACtBC,YAAapB,EAAMd,SAC3B,OACI,kBAAC6B,EAAD,CACIM,MAAM,oCACNC,eAAgB,CACZC,OAAQP,EAAKO,OACbC,MAAOR,EAAKQ,QAGhB,kBAAC,IAAD,CAAOlC,KAAK,SAASmC,GAAG,SAASC,OAAQ,CAAC,aAAc,cACpD,kBAAC,IAAD,CAASC,YAAa,EAAE,iBAAmB,uBAKvDZ,EAAIa,aAAe,CACfX,OAAQ,CACJY,IAAK,MACLC,IAAK,QAETZ,KAAM,GACNF,KAAM,CACFO,OAAQ,QACRC,MAAO,UAUAT,QCXAgB,GCpBAnB,aAJS,SAACxB,GAAD,MAAY,CAChCF,OAAQE,EAAMJ,WAGsB,KAAzB4B,CAA+BG,GDDhC,SAACf,GAAW,IAAD,EAEKgC,oBAAS,GAFd,mBAEdC,EAFc,KAEPC,EAFO,KAMrB,OACI,yBAAK/B,UAAW,cACZ,kBAAC,IAAD,CAAQG,QAJK,kBAAM4B,GAAUD,KAI7B,eACCA,GAAS,+BAAKzE,EAAKM,SEAjB8C,eAXS,SAAAxB,GAAK,MAAK,CAC1BJ,QAASI,EAAMJ,YAGI,SAAA6B,GACvB,MAAO,CACHhB,YAAa,kBAAMgB,EAAShB,MAC5BC,aAAc,kBAAMe,EAASf,SAItBc,CAA6CmB,G,yBCb/CI,G,OAAU,kBAAM,yBAAKhC,UAAW,iBCkB9BS,eAVS,SAACxB,GAAD,MACvB,CACCH,QAASG,EAAMH,YAGU,SAAC4B,GAAD,MAC1B,CACCf,aAAc,kBAAMe,EAASf,SAGhBc,EAA6C,SAACZ,GAC5D,IAAMf,EAAUe,EAAMf,QACtB,OACC,yBAAKkB,UAAW,WACdlB,GAAW,2BAAOkB,UAAW,WAAW,kBAAC,EAAD,OACzC,gCACC,uBAAGA,UAAW,QAAQ,kBAAC,IAAD,CAAiBiC,KAAMC,MAAU7E,EAAKE,QAA5D,KACA,6BACC,wBAAIyC,UAAW,UACd,4BAAI,+BAAK,kBAAC,IAAD,CAAiBiC,KAAME,MAAgB9E,EAAKW,QAAjD,MACJ,4BAAI,+BAAK,kBAAC,IAAD,CAAiBiE,KAAMG,WAInC,kBAAC,EAAD,MACA,kBAACC,EAAD,UC3BHC,IAASC,OACL,kBAAC,IAAD,CAAUlD,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGNmD,SAASC,eAAe,SV0HxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.fef8a8e9.chunk.js","sourcesContent":["export const START_LOADING = 'START_LOADING'\nexport const GET_WEATHER = 'GET_WEATHER'\nexport const REDIRECT = 'REDIRECT'\nexport const STOP_LOADING = 'STOP_LOADING'\n","export const i18n = {\n    //info\n    NAME : 'Oleksandr',\n    SURNAME : 'Barhylevych',\n    PATRONYMIC : 'Anatolievich',\n    ACTIVITY : 'WEB React developer',\n    //titles\n    TITLE : 'Portfolio',\n    JOKE : 'just buy me beer :)',\n    NAME_TITLE : 'Name: ',\n    SURNAME_TITLE : 'Surname: ',\n    PATRONYMIC_TITLE : 'Patronymic: ',\n    ACTIVITY_TITLE : 'Activity: ',\n    CONTACT: 'Contact',\n    SOCIAL: 'Social networks',\n    ALT_PICTURE: 'There should be picture',\n    GITHUB: 'github',\n    INSTAGRAM: 'instagram',\n    VK: 'vk',\n    MAIL: 'mail',\n    IMAGE : 'https://instagram.fiev12-1.fna.fbcdn.net/vp/7287cd1e2074a673468fbac3499a7979/5E535EA3/t51.2885-15/e35/45376051_496337464219004_4350957362950019205_n.jpg?_nc_ht=instagram.fiev12-1.fna.fbcdn.net&_nc_cat=108',\n}\n\n\n\n","import {i18n} from \"../utils/I18n\";\r\n\r\nexport const redirect = (location) => {\r\n\tswitch (location) {\r\n\t\tcase (i18n.INSTAGRAM):\r\n\t\t\treturn window.location.href = 'https://github.com/barhylevych'\r\n\t\tcase (i18n.GITHUB):\r\n\t\t\treturn window.location.href = 'https://github.com/barhylevych'\r\n\t\tcase (i18n.VK):\r\n\t\t\treturn window.location.href = 'https://github.com/barhylevych'\r\n\t\tcase (i18n.MAIL):\r\n\t\t\treturn window.location.href = 'https://github.com/barhylevych'\r\n\t\tdefault:\r\n\t}\r\n}\r\n","import {GET_WEATHER, START_LOADING, STOP_LOADING, REDIRECT} from \"../globalStore/actions_immortals\";\nimport {redirect} from \"../utils/helper\";\n\nconst initialState = {\n    weather: {},\n    loading: false,\n    keyAPI: 'pk.eyJ1IjoiYmFyaHlsZXZ5Y2giLCJhIjoiY2szMWVkNXJpMDdsaDNsbWpscjZveHczaSJ9.iz0Tb0UTzZ1_Rt0chVmooA',\n}\n\nfunction rootReducer (state = initialState, action) {\n    switch (action.type) {\n        case GET_WEATHER:\n            return {...state}\n        case START_LOADING:\n            return {...state, loading: true}\n        case STOP_LOADING:\n            return {...state, loading: false}\n        case REDIRECT:\n            redirect(action.body)\n            return {...state}\n        default:\n            return state\n    }\n}\n\nexport default rootReducer\n","import {createStore} from 'redux'\nimport rootReducer from \"./reducer\";\n\nconst store = createStore(rootReducer)\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {GET_WEATHER, STOP_LOADING, START_LOADING, REDIRECT} from \"../globalStore/actions_immortals\";\n\nexport function stopLoading() {\n    return {type: STOP_LOADING}\n}\n\nexport function startLoading() {\n    return {type: START_LOADING}\n}\n\nexport function getWeather() {\n    return {type: GET_WEATHER}\n}\n\nexport function redirect (action) {\n    return {type: REDIRECT, body: action}\n}\n\n","import React from \"react\";\nimport {i18n} from '../../utils/I18n'\nimport './style.sass'\nimport PropTypes from 'prop-types'\nimport {Icon} from \"antd\"\n\nconst bodyInfo = (activity, key) => <p key={key} className={'left-side-text'}>{activity}</p>\n\nconst LeftSide = (props) => {\n\n    const locateTo = (where) => props.redirect(where)\n\n    return (\n        <div className={'left-side'}>\n            <div className={'body'}>\n                <div className={'left-side-info'}>\n                    <img src={i18n.IMAGE} alt={i18n.ALT_PICTURE}/>\n                    <br/>\n                    <Icon type=\"instagram\" onClick={() => locateTo(i18n.INSTAGRAM)} />\n                    <Icon type=\"github\" onClick={() => locateTo(i18n.GITHUB)} />\n                </div>\n                <div className={'right-side-info'}>\n                    {[i18n.NAME, i18n.SURNAME, i18n.ACTIVITY].map((element, index) => bodyInfo(element, index))}\n                    <Icon type=\"home\" onClick={props.stopLoading } /><span>Kiev</span><br/>\n                    <Icon type=\"code\" onClick={props.startLoading }/><span>React js</span><br/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nLeftSide.propTypes = {\n    weather: PropTypes.object,\n    startLoading: PropTypes.func,\n    stopLoading: PropTypes.func,\n    redirect: PropTypes.func\n}\n\nexport default LeftSide\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {getWeather, startLoading, redirect, stopLoading} from \"../../actions/action\";\nimport LeftSide from \"./Left\";\n\nconst mapStateToProps = (state) => ({\n    weather: state.weather\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getWeather: () => dispatch(getWeather()),\n    startLoading: () => dispatch(startLoading()),\n    stopLoading: () => dispatch(stopLoading()),\n    redirect: action => dispatch(redirect(action)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftSide)\n","import React from \"react\";\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport PropTypes from 'prop-types'\n\nconst Map = ({size,center, zoom, ...props}) => {\n    const Map = ReactMapboxGl({\n        accessToken: props.keyAPI});\nreturn(\n    <Map\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n            height: size.height,\n            width: size.width\n        }}\n    >\n        <Layer type=\"symbol\" id=\"marker\" layout={{'icon-image': 'marker-15'}}>\n            <Feature coordinates={[-0.481747846041145, 51.3233379650232]}/>\n        </Layer>\n    </Map>\n)}\n\nMap.defaultProps = {\n    center: {\n        lat: 59.95,\n        lng: 320.33\n    },\n    zoom: 11,\n    size: {\n        height: '300px',\n        width: '300px'\n    }\n}\n\nMap.propTypes = {\n    keyAPI: PropTypes.string,\n    zoom: PropTypes.number,\n    size: PropTypes.object\n}\n\nexport default Map\n","import React, {useState} from \"react\";\nimport {i18n} from '../../utils/I18n'\nimport './style.css'\nimport {Button} from 'antd'\nimport PropTypes from 'prop-types'\nimport Map from '../Map'\n\nconst Right = (props) => {\n\n    const [click, setClick] = useState(false)\n\n    const toggleButton = () => setClick(!click)\n\n    return (\n        <div className={'right-side'}>\n            <Button onClick={toggleButton}> Press me! </Button>\n            {click && <p> {i18n.JOKE}</p>}\n            {/*<GoogleMap*/}\n            {/*    keyAPI={props.keyAPI}/>*/}\n        </div>\n    )\n}\n\nRight.propTypes = {\n    weather: PropTypes.object,\n    keyAPI: PropTypes.string,\n}\n\nexport default Right\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Map from \"./Map\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    keyAPI: state.weather\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Map)\r\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {startLoading, stopLoading} from \"../../actions/action\";\nimport Right from \"./Right\";\n\nconst mapStateToProps = state => ({\n        weather: state.weather,\n    })\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        stopLoading: () => dispatch(stopLoading()),\n        startLoading: () => dispatch(startLoading()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Right)\n","import React from \"react\";\nimport './style.css'\n\nexport const Loading = () => <div className={\"nb-spinner\"}></div>\n","import React from 'react'\nimport LeftSide from \"../components/LeftSide\";\nimport RightSide from \"../components/RightSide\";\nimport './Header.sass'\nimport {connect} from \"react-redux\";\nimport {i18n} from '../utils/I18n'\nimport {startLoading} from \"../actions/action\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCode, faNewspaper, faShareAlt} from '@fortawesome/free-solid-svg-icons'\nimport {Loading} from \"../components/Loading/index\";\n\nconst mapStateToProps = (state) => (\n\t{\n\t\tloading: state.loading,\n\t})\n\nconst mapDispatchToProps = (dispatch) => (\n\t{\n\t\tstartLoading: () => dispatch(startLoading()),\n\t})\n\nexport default connect(mapStateToProps, mapDispatchToProps)((props) => {\n\tconst loading = props.loading\n\treturn (\n\t\t<div className={'project'}>\n\t\t\t{loading && <label className={'loading'}><Loading/></label>}\n\t\t\t<header>\n\t\t\t\t<p className={'logo'}><FontAwesomeIcon icon={faCode}/>{i18n.SURNAME} </p>\n\t\t\t\t<nav>\n\t\t\t\t\t<ul className={'header'}>\n\t\t\t\t\t\t<li><p> {<FontAwesomeIcon icon={faNewspaper}/>}{i18n.CONTACT} </p></li>\n\t\t\t\t\t\t<li><p> {<FontAwesomeIcon icon={faShareAlt}/>}</p></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\t\t\t</header>\n\t\t\t<LeftSide/>\n\t\t\t<RightSide/>\n\t\t</div>\n\t)\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from '../src/globalStore/store'\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.sass';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/index'\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}